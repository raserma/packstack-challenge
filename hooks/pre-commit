#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".
#!/bin/bash

if git rev-parse --verify HEAD &> /dev/null ; then
	against=HEAD
else
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Only those files changed found at ansible/ folder with '.yaml/yml' extension
files=$(
      git diff-index --cached --name-only $against -- ansible/ |
	          grep -E '\.ya?ml$'
)

if [[ -n $files ]] ; then
	# if ansible-lint is not installed
	if ! command -v ansible-lint &> /dev/null ; then
		echo -e "\e[1m\e[33m[warn]\e[0m \e[1mansible-lint\e[0m is not installed, skipping tests" >&2
		exit 0
	fi
fi

# check ansible lint syntax
for file in $files ; do
	tmp_lintr=$(mktemp)
	git show ":$file" > "$tmp_lintr"
	ansible-lint "$tmp_lintr" || exit 1
	rm -f "$tmp_lintr"
done
